(function(){function e(){if(!window.PublicKeyCredential){alert("Error: this browser does not support WebAuthn");return false}return true}function t(){return typeof window.PublicKeyCredential!="undefined"}function n(t){try{t=String(t).replace(/_/g,"/").replace(/-/g,"+");return Uint8Array.from(atob(t),e=>e.charCodeAt(0))}catch(e){console.error(e+": "+t)}}function a(e){return btoa(String.fromCharCode.apply(null,new Uint8Array(e))).replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,"")}function o(e){var t=this;this.options={urlPrefix:"/webauthn",debug:false,getRegisterData:function(){return{}},getLoginData:function(){return{}},getUnbindData:function(){return{}},onRegisterSuccess:function(e){t.options.debug&&console.log(e)},onRegisterError:function(e){t.options.debug&&console.error(e)},onLoginSuccess:function(e){t.options.debug&&console.log(e)},onLoginError:function(e){t.options.debug&&console.error(e)},onUnbindSuccess:function(e){t.options.debug&&console.log(e)},onUnbindError:function(e){t.options.debug&&console.error(e)}};$.extend(this.options,e||{})}o.prototype.check=e;o.prototype.isSupported=t();o.prototype.register=function(i){if(i===""){alert("Please enter a username");return}var r=this;$.post(r.options.urlPrefix+"/register/begin/"+i,r.options.getRegisterData(),function(e){return e},"json").then(e=>{r.options.debug&&console.log(e);e.publicKey.challenge=n(e.publicKey.challenge);e.publicKey.user.id=n(e.publicKey.user.id);if(e.publicKey.excludeCredentials){for(var t=0;t<e.publicKey.excludeCredentials.length;t++){e.publicKey.excludeCredentials[t].id=n(e.publicKey.excludeCredentials[t].id)}}return navigator.credentials.create({publicKey:e.publicKey})}).then(e=>{r.options.debug&&console.log(e);let t=e.response.attestationObject;let n=e.response.clientDataJSON;let o=e.rawId;$.post(r.options.urlPrefix+"/register/finish/"+i,JSON.stringify({id:e.id,rawId:a(o),type:e.type,response:{attestationObject:a(t),clientDataJSON:a(n)}}),function(e){return e},"json")}).then(e=>{r.options.debug&&alert("successfully registered "+i+"!");r.options.onRegisterSuccess.apply(this,arguments)}).catch(e=>{console.log(e);alert("failed to register "+i+": "+e);r.options.onRegisterError.apply(this,arguments)})};o.prototype.auth=function(s,l){if(s===""){alert("Please enter a username");return}var u=this;$.post(u.options.urlPrefix+"/"+l+"/begin/"+s,l=="login"?u.options.getLoginData():u.options.getUnbindData(),function(e){return e},"json").then(e=>{u.options.debug&&console.log(e);e.publicKey.challenge=n(e.publicKey.challenge);e.publicKey.allowCredentials.forEach(function(e){e.id=n(e.id)});return navigator.credentials.get({publicKey:e.publicKey})}).then(e=>{u.options.debug&&console.log(e);let t=e.response.authenticatorData;let n=e.response.clientDataJSON;let o=e.rawId;let i=e.response.signature;let r=e.response.userHandle;$.post(u.options.urlPrefix+"/"+l+"/finish/"+s,JSON.stringify({id:e.id,rawId:a(o),type:e.type,response:{authenticatorData:a(t),clientDataJSON:a(n),signature:a(i),userHandle:a(r)}}),function(e){return e},"json")}).then(e=>{u.options.debug&&alert("successfully "+l+" "+s+"!");if(l=="login"){u.options.onLoginSuccess.apply(this,arguments)}else{u.options.onUnbindSuccess.apply(this,arguments)}}).catch(e=>{console.log(e);alert("failed to "+l+" "+s);if(l=="login"){u.options.onLoginError.apply(this,arguments)}else{u.options.onUnbindError.apply(this,arguments)}})};o.prototype.login=function(e){this.auth(e,"login")};o.prototype.unbind=function(e){this.auth(e,"unbind")};window.WebAuthn=o})();