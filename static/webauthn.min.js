(function(){function e(){if(!window.PublicKeyCredential){alert("Error: this browser does not support WebAuthn");return false}return true}function n(e){return Uint8Array.from(atob(e),e=>e.charCodeAt(0))}function u(e){return btoa(String.fromCharCode.apply(null,new Uint8Array(e))).replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,"")}function t(e){this.options={urlPrefix:"/webauthn",debug:false,getRegisterData:function(){return{}},getLoginData:function(){return{}},getUnbindData:function(){return{}},onRegisterSuccess:function(){},onRegisterError:function(){},onLoginSuccess:function(){},onLoginError:function(){},onUnbindSuccess:function(){},onUnbindError:function(){}};$.extend(this.options,e||{})}t.prototype.check=e;t.prototype.register=function(i){if(i===""){alert("Please enter a username");return}var r=this;$.post(r.options.urlPrefix+"/register/begin/"+i,r.options.getRegisterData(),function(e){return e},"json").then(e=>{r.options.debug&&console.log(e);e.publicKey.challenge=n(e.publicKey.challenge);e.publicKey.user.id=n(e.publicKey.user.id);if(e.publicKey.excludeCredentials){for(var t=0;t<e.publicKey.excludeCredentials.length;t++){e.publicKey.excludeCredentials[t].id=n(e.publicKey.excludeCredentials[t].id)}}return navigator.credentials.create({publicKey:e.publicKey})}).then(e=>{r.options.debug&&console.log(e);let t=e.response.attestationObject;let n=e.response.clientDataJSON;let o=e.rawId;$.post(r.options.urlPrefix+"/register/finish/"+i,JSON.stringify({id:e.id,rawId:u(o),type:e.type,response:{attestationObject:u(t),clientDataJSON:u(n)}}),function(e){return e},"json")}).then(e=>{r.options.debug&&alert("successfully registered "+i+"!");r.options.onRegisterSuccess.call(this,arguments)}).catch(e=>{console.log(e);alert("failed to register "+i);r.options.onRegisterError.call(this,arguments)})};t.prototype.auth=function(s,l){if(s===""){alert("Please enter a username");return}var a=this;$.post(a.options.urlPrefix+"/"+l+"/begin/"+s,l=="login"?a.options.getLoginData():a.options.getUnbindData(),function(e){return e},"json").then(e=>{a.options.debug&&console.log(e);e.publicKey.challenge=n(e.publicKey.challenge);e.publicKey.allowCredentials.forEach(function(e){e.id=n(e.id)});return navigator.credentials.get({publicKey:e.publicKey})}).then(e=>{a.options.debug&&console.log(e);let t=e.response.authenticatorData;let n=e.response.clientDataJSON;let o=e.rawId;let i=e.response.signature;let r=e.response.userHandle;$.post(a.options.urlPrefix+"/"+l+"/finish/"+s,JSON.stringify({id:e.id,rawId:u(o),type:e.type,response:{authenticatorData:u(t),clientDataJSON:u(n),signature:u(i),userHandle:u(r)}}),function(e){return e},"json")}).then(e=>{a.options.debug&&alert("successfully "+l+" "+s+"!");if(l=="login"){a.options.onLoginSuccess.call(this,arguments)}else{a.options.onUnbindSuccess.call(this,arguments)}}).catch(e=>{console.log(e);alert("failed to "+l+" "+s);if(l=="login"){a.options.onLoginError.call(this,arguments)}else{a.options.onUnbindError.call(this,arguments)}})};t.prototype.login=function(e){this.auth(e,"login")};t.prototype.unbind=function(e){this.auth(e,"unbind")};window.WebAuthn=t})();