(function(){function e(){if(!window.PublicKeyCredential){alert("Error: this browser does not support WebAuthn");return false}return true}function n(e){return Uint8Array.from(atob(e),e=>e.charCodeAt(0))}function a(e){return btoa(String.fromCharCode.apply(null,new Uint8Array(e))).replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,"")}function t(e){this.options={urlPrefix:"/webauthn",debug:false,getRegisterData:function(){return{}},getLoginData:function(){return{}},onRegisterSuccess:function(){},onRegisterError:function(){},onLoginSuccess:function(){},onLoginError:function(){}};$.extend(this.options,e||{})}t.prototype.check=e;t.prototype.register=function(i){if(i===""){alert("Please enter a username");return}var r=this;$.post(r.options.urlPrefix+"/register/begin/"+i,r.options.getRegisterData(),function(e){return e},"json").then(e=>{r.options.debug&&console.log(e);e.publicKey.challenge=n(e.publicKey.challenge);e.publicKey.user.id=n(e.publicKey.user.id);if(e.publicKey.excludeCredentials){for(var t=0;t<e.publicKey.excludeCredentials.length;t++){e.publicKey.excludeCredentials[t].id=n(e.publicKey.excludeCredentials[t].id)}}return navigator.credentials.create({publicKey:e.publicKey})}).then(e=>{r.options.debug&&console.log(e);let t=e.response.attestationObject;let n=e.response.clientDataJSON;let o=e.rawId;$.post(r.options.urlPrefix+"/register/finish/"+i,JSON.stringify({id:e.id,rawId:a(o),type:e.type,response:{attestationObject:a(t),clientDataJSON:a(n)}}),function(e){return e},"json")}).then(e=>{r.options.debug&&alert("successfully registered "+i+"!");r.options.onRegisterSuccess.call(this,arguments)}).catch(e=>{console.log(e);alert("failed to register "+i);r.options.onRegisterError.call(this,arguments)})};t.prototype.login=function(s){if(s===""){alert("Please enter a username");return}var l=this;$.post(l.options.urlPrefix+"/login/begin/"+s,l.options.getLoginData(),function(e){return e},"json").then(e=>{l.options.debug&&console.log(e);e.publicKey.challenge=n(e.publicKey.challenge);e.publicKey.allowCredentials.forEach(function(e){e.id=n(e.id)});return navigator.credentials.get({publicKey:e.publicKey})}).then(e=>{l.options.debug&&console.log(e);let t=e.response.authenticatorData;let n=e.response.clientDataJSON;let o=e.rawId;let i=e.response.signature;let r=e.response.userHandle;$.post(l.options.urlPrefix+"/login/finish/"+s,JSON.stringify({id:e.id,rawId:a(o),type:e.type,response:{authenticatorData:a(t),clientDataJSON:a(n),signature:a(i),userHandle:a(r)}}),function(e){return e},"json")}).then(e=>{l.options.debug&&alert("successfully logged in "+s+"!");l.options.onLoginSuccess.call(this,arguments)}).catch(e=>{console.log(e);alert("failed to register "+s);l.options.onLoginError.call(this,arguments)})};window.WebAuthn=t})();